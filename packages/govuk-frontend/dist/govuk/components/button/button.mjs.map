{"version":3,"file":"button.mjs","sources":["../../../../src/govuk/components/button/button.mjs"],"sourcesContent":["import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n */\nexport class Button extends GOVUKFrontendComponent {\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($root, config = {}) {\n    super($root)\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config,\n      normaliseDataset(Button, this.$root.dataset)\n    )\n\n    // Find the parent form if this is a submit button\n    this.$form = this.$root.closest('form');\n\n    this.$root.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Handle click events\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    // Handle debouncing first\n    if (this.debounce(event) === false) {\n      return;\n    }\n\n    // If validation is enabled and this is a submit button in a form\n    if (this.config.enableValidation &&\n        this.$form &&\n        this.$root.getAttribute('type') === 'submit') {\n          this.handleFormSubmit(event);\n    }\n  }\n    \n  /**\n   * Handle form submission and validation\n   * @param {Event} event - The submission event\n   */\n  handleFormSubmit(event) {\n    // Clear any existing errors first\n    this.clearErrors();\n\n    const validationSelectors = this.config.validationSelectors || {};\n    let isValid = true;\n    const errors = [];\n\n    for (const [field, selector] of Object.entries(validationSelectors)) {\n      const $element = this.$form.querySelector(selector);\n      if (!$element) continue;\n\n      const valid = this.validateElement($element, field);\n      if (!valid) {\n        isValid = false;\n        errors.push({\n          field,\n          element: $element,\n          message: this.config.validationMessages?.[field] || 'This field is required'\n        });\n      }\n    }\n\n    if (!isValid) {\n      event.preventDefault();\n      this.showErrors(errors);\n\n      if (this.config.focusOnError && errors.length > 0) {\n        errors[0].element.focus();\n      }\n    }\n  }\n\n  /**\n   * Validate a single form element\n   * @param {Element} $element - The element to validate\n   * @param {string} field - The field name\n   * @returns {boolean} - Whether the element is valid\n   */\n  validateElement($element, field) {\n    if ($element.type === 'checkbox') {\n      return $element.checked;\n    }\n\n    if ($element.type === 'radio') {\n      const name = $element.getAttribute('name');\n      return name ? this.$form.querySelector(`input[name=\"${name}\"]:checked`) !== null : false;\n    }\n\n    return $element.value.trim() !== '';\n  }\n\n  /**\n   * Clear all validation errors\n   */\n  clearErrors() {\n    this.$form.querySelectorAll('.govuk-form-group--error')\n      .forEach($group => $group.classList.remove('govuk-form-group--error'));\n\n    this.$form.querySelectorAll('.govuk-error-message')\n      .forEach($error => $error.remove());\n\n    const $errorSummary = this.$form.querySelector('.govuk-error-summary');\n    if ($errorSummary) {\n      $errorSummary.remove();\n    }\n  }\n\n  /**\n   * Display validation errors\n   * @param {Array<{field: string, element: Element, message: string}>} errors - List of errors\n   */\n  showErrors(errors) {\n    errors.forEach(({element, message}) => {\n      const $formGroup = element.closest('.govuk-form-group');\n      if (!$formGroup) return;\n\n      // Add error class to form group\n      $formGroup.classList.add('govuk-form-group--error');\n\n      const $error = document.createElement('p');\n      $error.className = 'govuk-error-message';\n      $error.innerHTML = `<span class=\"govuk-visually-hidden\">Error:</span> ${message}`;\n\n      const $field = $formGroup.querySelector('.govuk-input, .govuk-fieldset');\n      if ($field) {\n        $field.parentNode?.insertBefore($error, $field);\n      }\n    });\n\n    if (this.config.showErrorSummary && errors.length > 0) {\n      this.createErrorSummary(errors);\n    }\n  }\n\n  /**\n   * Create and insert error summary\n   * @param {Array<{field: string, element: Element, message: string}>} errors - List of errors\n   */\n  createErrorSummary(errors) {\n    const $summary = document.createElement('div');\n    $summary.className = 'govuk-error-summary';\n    $summary.setAttribute('data-module', 'govuk-error-summary');\n    \n    $summary.innerHTML = `\n      <div role=\"alert\">\n        <h2 class=\"govuk-error-summary__title\">\n          There is a problem\n        </h2>\n        <div class=\"govuk-error-summary__body\">\n          <ul class=\"govuk-list govuk-error-summary__list\">\n            ${errors.map(({message}) => `\n              <li>${message}</li>\n            `).join('')}\n          </ul>\n        </div>\n      </div>\n    `;\n\n    // Insert at the top of the form\n    this.$form.insertBefore($summary, this.$form.firstChild);\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false,\n    enableValidation: false,\n    validationSelectors: {},\n    validationMessages: {},\n    focusOnError: true,\n    showErrorSummary: true\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' },\n      enableValidation: { type: 'boolean' },\n      validationSelectors: { type: 'object' },\n      validationMessages: { type: 'object' },\n      focusOnError: { type: 'boolean' },\n      showErrorSummary: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n * @property {boolean} [enableValidation=false] - Enable form validation\n * @property {Object.<string, string>} [validationSelectors] - Selectors for elements to validate\n * @property {Object.<string, string>} [validationMessages] - Custom error messages for fields\n * @property {boolean} [focusOnError=true] - Focus the first invalid element\n * @property {boolean} [showErrorSummary=true] - Show error summary at top of form\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n"],"names":["DEBOUNCE_TIMEOUT_IN_SECONDS","Button","GOVUKFrontendComponent","constructor","$root","config","debounceFormSubmitTimer","mergeConfigs","defaults","normaliseDataset","dataset","$form","closest","addEventListener","event","handleKeyDown","handleClick","debounce","enableValidation","getAttribute","handleFormSubmit","clearErrors","validationSelectors","isValid","errors","field","selector","Object","entries","$element","querySelector","valid","validateElement","_this$config$validati","push","element","message","validationMessages","preventDefault","showErrors","focusOnError","length","focus","type","checked","name","value","trim","querySelectorAll","forEach","$group","classList","remove","$error","$errorSummary","$formGroup","add","document","createElement","className","innerHTML","$field","_$field$parentNode","parentNode","insertBefore","showErrorSummary","createErrorSummary","$summary","setAttribute","map","join","firstChild","$target","target","key","HTMLElement","click","preventDoubleClick","window","setTimeout","moduleName","freeze","schema","properties"],"mappings":"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"}